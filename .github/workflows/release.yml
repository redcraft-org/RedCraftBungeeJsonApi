name: Release project

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Build with Maven
        run: mvn -B package

      - name: Get POM version
        id: pom-version-extractor
        run: echo "::set-output name=version::`mvn help:evaluate -Dexpression=project.version -q -DforceStdout`"

      - name: Get POM name
        id: pom-name-extractor
        run: echo "::set-output name=name::`mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout`"

      - name: Create release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.pom-version-extractor.outputs.version }}
          release_name: ${{ steps.pom-name-extractor.outputs.name }} ${{ steps.pom-version-extractor.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: target/${{ steps.pom-name-extractor.outputs.name }}-${{ steps.pom-version-extractor.outputs.version }}.jar
          asset_name: ${{ steps.pom-name-extractor.outputs.name }}-${{ steps.pom-version-extractor.outputs.version }}.jar
          asset_content_type: application/java-archive
